datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                     String                  @id @default(cuid())
  createdAt              DateTime                @default(now())
  email                  String                  @unique
  emailVerified          Boolean                 @default(false)
  password               String
  emailVerificationToken EmailVerificationToken?
  passwordResetToken     PasswordResetToken?
  ownedProducts          Product[]
  giftCodes              GiftCode[]
  Invoice                Invoice[]
}

model Product {
  id            String     @id @default(cuid())
  createdAt     DateTime   @default(now())
  name          String
  stripeId      String     @unique
  price         String
  description   String
  pubName       String     @unique
  thumbnail     String
  backgroundImg String?
  gameType      String
  cards         Card[]
  DemoCard      DemoCard[]
  owners        User[]
  GiftCode      GiftCode[]
  Invoice       Invoice[]
}

model Invoice {
  id           String    @id @default(cuid())
  createdAt    DateTime  @default(now())
  products     Product[]
  userId       String
  user         User      @relation(fields: [userId], references: [id])
  amount       BigInt
  wasAGiftCode Boolean
}

model GiftCode {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  code      String   @unique
  productId String
  Product   Product? @relation(fields: [productId], references: [id])
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  redeemed  Boolean  @default(false)
}

model EmailVerificationToken {
  userId   String   @unique
  hash     String   @unique
  expireAt DateTime @default(dbgenerated("now() + interval '30 minutes'"))
  user     User     @relation(fields: [userId], references: [id])
}

model PasswordResetToken {
  userId   String   @unique
  hash     String   @unique
  expireAt DateTime @default(dbgenerated("now() + interval '30 minutes'"))
  user     User     @relation(fields: [userId], references: [id])
}

model Card {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  title          String
  description    String
  productId      String
  forbiddenWords String[]
  truth          String?
  dare           String?
  Product        Product? @relation(fields: [productId], references: [id])
}

model DemoCard {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  title          String
  description    String
  productId      String
  forbiddenWords String[]
  truth          String?
  dare           String?
  Product        Product? @relation(fields: [productId], references: [id])
}
